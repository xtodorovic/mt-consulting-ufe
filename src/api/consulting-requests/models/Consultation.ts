/* tslint:disable */
/* eslint-disable */
/**
 * Waiting List Api
 * Consulting List management for Web-In-Cloud system
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xtodorovic@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Consultation
 */
export interface Consultation {
    /**
     * Unique identifier for the consultation request
     * @type {string}
     * @memberof Consultation
     */
    id: string;
    /**
     * Name of the patient
     * @type {string}
     * @memberof Consultation
     */
    name: string;
    /**
     * Email address of the patient
     * @type {string}
     * @memberof Consultation
     */
    email: string;
    /**
     * Description of the patient's symptoms
     * @type {string}
     * @memberof Consultation
     */
    symptoms: string;
    /**
     * Link to the video consultation (if applicable)
     * @type {string}
     * @memberof Consultation
     */
    videoLink?: string;
    /**
     * Date when the consultation is scheduled
     * @type {Date}
     * @memberof Consultation
     */
    scheduledDate?: Date;
    /**
     * Time when the consultation is scheduled
     * @type {string}
     * @memberof Consultation
     */
    scheduledTime?: string;
}

/**
 * Check if a given object implements the Consultation interface.
 */
export function instanceOfConsultation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "symptoms" in value;

    return isInstance;
}

export function ConsultationFromJSON(json: any): Consultation {
    return ConsultationFromJSONTyped(json, false);
}

export function ConsultationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Consultation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'email': json['email'],
        'symptoms': json['symptoms'],
        'videoLink': !exists(json, 'videoLink') ? undefined : json['videoLink'],
        'scheduledDate': !exists(json, 'scheduledDate') ? undefined : (new Date(json['scheduledDate'])),
        'scheduledTime': !exists(json, 'scheduledTime') ? undefined : json['scheduledTime'],
    };
}

export function ConsultationToJSON(value?: Consultation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'email': value.email,
        'symptoms': value.symptoms,
        'videoLink': value.videoLink,
        'scheduledDate': value.scheduledDate === undefined ? undefined : (value.scheduledDate.toISOString().substr(0,10)),
        'scheduledTime': value.scheduledTime,
    };
}

