/* tslint:disable */
/* eslint-disable */
/**
 * Consulting Form API
 * Handles submission of consultation forms
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xtodorovic@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ConsultingForm,
} from '../models';
import {
    ConsultingFormFromJSON,
    ConsultingFormToJSON,
} from '../models';

export interface SubmitConsultingFormRequest {
    consultingForm: ConsultingForm;
}

/**
 * ConsultingFormApi - interface
 * 
 * @export
 * @interface ConsultingFormApiInterface
 */
export interface ConsultingFormApiInterface {
    /**
     * 
     * @summary Submit a new consultation request
     * @param {ConsultingForm} consultingForm 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsultingFormApiInterface
     */
    submitConsultingFormRaw(requestParameters: SubmitConsultingFormRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * Submit a new consultation request
     */
    submitConsultingForm(requestParameters: SubmitConsultingFormRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class ConsultingFormApi extends runtime.BaseAPI implements ConsultingFormApiInterface {

    /**
     * Submit a new consultation request
     */
    async submitConsultingFormRaw(requestParameters: SubmitConsultingFormRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.consultingForm === null || requestParameters.consultingForm === undefined) {
            throw new runtime.RequiredError('consultingForm','Required parameter requestParameters.consultingForm was null or undefined when calling submitConsultingForm.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/consulting-form`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ConsultingFormToJSON(requestParameters.consultingForm),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Submit a new consultation request
     */
    async submitConsultingForm(requestParameters: SubmitConsultingFormRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.submitConsultingFormRaw(requestParameters, initOverrides);
    }

}
